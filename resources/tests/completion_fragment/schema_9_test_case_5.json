{
  "context": "type PatreonComment {\n  id: ID!\n  authorUsername: String!\n  authorPicture: String!\n  authorUrl: String!\n  postedAt: DateTime!\n  contents: String!\n  post: PatreonPost!\n}\n\n\"\"\"\nA date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.\n\"\"\"\nscalar DateTime\n\ntype PatreonAttachment {\n  id: ID!\n  displayName: String!\n  filename: String!\n  creator: Creator!\n  post: PatreonPost!\n}\n\ntype PatreonEmbed {\n  id: ID!\n  subject: String\n  description: String\n  provider: String\n  url: String!\n}\n\ntype PatreonPost {\n  id: ID!\n  postedAt: DateTime!\n  title: String!\n  imageUrl: String\n  contents: String!\n  plainContents: String!\n  attachments: [PatreonAttachment!]!\n  comments: [PatreonComment!]!\n  embeds: [PatreonEmbed!]!\n  creator: PatreonCreator!\n}\n\ntype PatreonCreator {\n  \n}\n\ntype Creator {\n  id: ID!\n  name: String!\n  profilePicture: String\n  bannerPicture: String\n  patreon: [PatreonCreator!]\n  totalPostCount: Int!\n  lastUpdated: DateTime!\n  created: DateTime!\n}\n\ntype Query {\n  getAllCreators(skip: Int = \"\"\"0\"\"\", limit: Int = \"\"\"25\"\"\", sortBy: sortBy): [Creator!]!\n  getCreatorById(creatorId: ID!): Creator!\n  getCreatorsByIds(sortBy: sortBy, creatorIds: [ID!]!): [Creator!]!\n  searchCreatorByName(skip: Int = \"\"\"0\"\"\", limit: Int = \"\"\"25\"\"\", sortBy: sortBy, name: String!): [Creator!]!\n  getAllPatreons(limit: Int = \"\"\"25\"\"\"): [PatreonCreator!]!\n  getPatreonsByCreatorId(creatorId: ID!): [PatreonCreator!]!\n  getPatreonByCampaignId(campaignId: ID!): PatreonCreator!\n  getPatreonByCampaignIds(campaignIds: [ID!]!): [PatreonCreator!]!\n  searchPatreonsByName(limit: Int = \"\"\"25\"\"\", name: String!): [PatreonCreator!]!\n  getPatreonPosts(skip: Int = \"\"\"0\"\"\", limit: Int = \"\"\"50\"\"\", sortBy: sortBy, campaignId: ID!): [PatreonPost!]!\n  getPatreonPostById(postId: ID!): PatreonPost!\n}\n\nenum sortBy {\n  \"\"\"\n  Sort by newest (DESC)\n  \"\"\"\n  LAST_CREATED\n  \"\"\"\n  Sort by last updated (DESC)\n  \"\"\"\n  LAST_UPDATED\n  \"\"\"\n  Sort by name (ASC)\n  \"\"\"\n  NAME\n}\n\ntype Mutation {\n  createCreator(creator: CreatorDto!): Creator!\n  addPatreonPostAttachments(postId: ID!, attachments: [PatreonAttachmentDto!]!): [PatreonAttachment!]!\n  addPatreonPostComments(postId: ID!, comments: [PatreonCommentDto!]!): [PatreonComment!]!\n  createPatreon(creatorId: ID!, patreon: PatreonCreatorDto!): PatreonCreator!\n  addPatreonPosts(creatorCampaignId: ID!, posts: [PatreonPostDto!]!): [PatreonPost!]!\n}\n\ninput CreatorDto {\n  name: String!\n  profilePicture: String\n  bannerPicture: String\n}\n\ninput PatreonAttachmentDto {\n  id: ID!\n  displayName: String!\n  filename: String!\n}\n\ninput PatreonCommentDto {\n  id: ID!\n  authorUsername: String!\n  authorPicture: String\n  authorUrl: String\n  postedAt: DateTime!\n  contents: String!\n}\n\ninput PatreonCreatorDto {\n  campaignId: ID!\n  username: String!\n}\n\ninput PatreonPostDto {\n  id: Int!\n  postedAt: DateTime!\n  title: String!\n  imageUrl: String\n  contents: String!\n  plainContents: String!\n  attachments: [PatreonAttachmentDto!]\n  comments: [PatreonCommentDto!]\n  embeds: [PatreonEmbedDto!]\n}\n\ninput PatreonEmbedDto {\n  subject: String\n  description: String\n  provider: String\n  url: String!\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}\n",
  "expected": "campaignId: ID!\n  username: String!\n  posts: [PatreonPost!]!\n  creator: Creator!",
  "offset": 799,
  "instruction": "El fragmento describe un objeto que incluye un identificador de campa√±a, un nombre de usuario, una lista de publicaciones de Patreon y un creador asociado."
}