{
  "context": "type Link {\n    id: String!\n    url: String!\n    description: String!\n    postedBy: User\n    votes: [Vote!]!\n}\n\ntype User {\n    id: ID!\n    name: String!\n    email: String\n    password: String\n    votes: [Vote!]!\n}\n\ninput AuthData {\n  email: String!\n  password: String!\n}\n\ntype SigninPayload {\n  token: String\n  user: User\n}\n\ntype Vote {\n    id: ID!\n    createdAt: Time!\n    user: User!\n    link: Link!\n}\n\nscalar Time\n\ntype Query {\n    allLinks: [Link]\n}\n\ntype Mutation {\n    \n}\n\nschema {\n    query: Query\n    mutation: Mutation\n}\n",
  "expected": "createUser(name: String!, authProvider: AuthData!): User\n    createLink(url: String!, description: String!): Link\n    signinUser(auth: AuthData): SigninPayload\n    createVote(linkId: ID, userId: ID): Vote",
  "offset": 476,
  "instruction": "El fragmento describe operaciones para crear usuarios, enlaces, iniciar sesi√≥n y votar en un sistema GraphQL."
}