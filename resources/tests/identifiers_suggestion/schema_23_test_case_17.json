{
    "kind": "enum",
    "context": "# Copyright 2023 The Bank of New York Mellon.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nschema {\n    query: Query\n    mutation: Mutation\n}\n\n# Collection of Query operations\ntype Query {\n    # Search for a composer by ID.\n    composer(id: ID!): Composer\n    # Filter a list of composers by any combination of the available arguments\n    composers(period: Period, country: String, city: String, instrument: String, lastName: String): [Composer]\n}\n\n# Collection of Mutation operations\ntype Mutation {\n    # Add a new composer to the list of composers.\n    createComposer(composer: ComposerInput!): Composer\n    # Update fields on an existing composer.\n    updateComposer(id: ID! composer: ComposerInput): Composer\n    # Add a new composition to an existing composer's list of compositions.\n    addCompositions(composerId: ID! compositions: [CompositionInput]): [Composition]\n    # Remove a composition from an existing composer's list of compositions.\n    deleteComposition(composerId: ID! title: String!): Boolean\n}\n\ntype Composer {\n    id: ID!\n    firstName: String\n    lastName: String\n    dateOfBirth: Date\n    location: Location\n    period: Period\n    primaryInstrument: Instrument\n    compositions(key: Key, subtype: String): [Composition]\n}\n\ntype Location {\n    city: String\n    country: String\n}\n\ntype Instrument {\n    name: String\n    type: InstrumentType!\n}\n\nscalar Key\nscalar Date\n\ninterface Composition {\n    title: String\n    key: Key!\n}\n\ntype Piece implements Composition {\n    title: String\n    key: Key!\n}\n\ntype Concerto implements Composition{\n    title: String\n    key: Key!\n    soloInstrument: Instrument!\n}\n\ntype Song implements Composition{\n    title: String\n    key: Key!\n    lyrics: String!\n}\n\ninput ComposerInput {\n    firstName: String\n    lastName: String!\n    dateOfBirth: Date\n    location: LocationInput\n    primaryInstrument: InstrumentInput\n    period: Period\n}\n\ninput LocationInput {\n    city: String\n    country: String\n}\n\ninput InstrumentInput {\n    name: String\n    type: InstrumentType!\n}\n\ninput CompositionInput{\n    subtype: String!\n    title: String\n    key: Key!\n    soloInstrument: InstrumentInput\n    lyrics: String\n}\n\nenum  {\n    RENAISSANCE\n    BAROQUE\n    CLASSICAL\n    ROMANTIC\n    MODERN\n    POST_MODERN\n}\n\nenum InstrumentType {\n    STRING\n    KEYBOARD\n    WOODWIND\n    BRASS\n    PERCUSSION\n    VOICE\n}\n",
    "expected": "Period",
    "offset": 2666
}