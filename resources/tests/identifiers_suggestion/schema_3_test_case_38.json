{
    "kind": "attr_type",
    "context": "\n# Update inputs\n\ninput FeedVersionSetInput {\n  name: String\n  description: String\n}\n\n# Query filters\n\ninput OperatorFilter {\n  merged: Boolean\n  onestop_id: String\n  feed_onestop_id: String\n  agency_id: String\n  search: String\n  tags: Tags\n  city_name: String\n  adm0_name: String\n  adm1_name: String\n  adm0_iso: String\n  adm1_iso: String\n  license: LicenseFilter\n  bbox: BoundingBox\n  within: Polygon\n  near: PointRadius\n}\n\ninput ValidationReportFilter {\n  success: Boolean\n  validator: String\n}\n\ninput FeedVersionFilter {\n  import_status: ImportStatus\n  feed_onestop_id: String\n  sha1: String\n  file: String\n  feed_ids: [Int!]\n  covers: ServiceCoversFilter\n  bbox: BoundingBox\n  within: Polygon\n  near: PointRadius\n}\n\nenum ImportStatus {\n  SUCCESS\n  ERROR\n  IN_PROGRESS\n}\n\nenum LicenseValue {\n  YES\n  NO\n  EXCLUDE_NO\n  UNKNOWN\n}\n\ninput FeedFilter {\n  \"Search for feed with a specific Onestop ID\"\n  onestop_id: String\n  \"Search for feeds of certain data types\"\n  spec: [FeedSpecTypes!]\n  \"Search for feeds with or without a fetch error\"\n  fetch_error: Boolean\n  \"Search for feeds by their import status\"\n  import_status: ImportStatus\n  \"Full text search\"\n  search: String\n  \"Search for feeds with a tag\"\n  tags: Tags,\n  \"Search for feeds by their source URLs\"\n  source_url: FeedSourceUrl\n  license: LicenseFilter\n  bbox: BoundingBox\n  within: Polygon\n  near: PointRadius\n}\n\ninput FeedFetchFilter {\n  success: Boolean\n}\n\ninput FeedSourceUrl {\n  url: String\n  type: FeedSourceUrlTypes\n  case_sensitive: Boolean\n}\n\nenum FeedSourceUrlTypes {\n  static_current\n  static_historic\n  static_planned\n  static_hypothetical\n  realtime_vehicle_positions\n  realtime_trip_updates\n  realtime_alerts\n  gbfs_auto_discovery\n  mds_provider\n}\n\n\"\"\"\nType of data contained in a source feed\n\"\"\"\nenum FeedSpecTypes {\n  GTFS\n  GTFS_RT\n  GBFS\n  MDS\n}\n\ninput AgencyFilter {\n  onestop_id: String\n  feed_version_sha1: String\n  feed_onestop_id: String\n  agency_id: String\n  \"Search for records with this GTFS agency_name\"\n  agency_name: String\n  bbox: BoundingBox\n  within: Polygon\n  \"Search for agencies within a radius\"\n  near: PointRadius\n  \"Full text search\"\n  search: String\n  \"Search by city name (provided by Natural Earth)\"\n  city_name: String\n  \"Search by country name (provided by Natural Earth)\"\n  adm0_name: String\n  \"Search by state/province/division name (provided by Natural Earth)\"\n  adm1_name: String\n  \"Search by country 2 letter ISO 3166 code (provided by Natural Earth)\"\n  adm0_iso: String\n  \"Search by state/province/division ISO 3166-2 code (provided by Natural Earth)\"\n  adm1_iso: String\n  license: LicenseFilter\n}\n\ninput RouteFilter {\n  onestop_id: String\n  onestop_ids: [String!]\n  allow_previous_onestop_ids: Boolean\n  feed_version_sha1: String\n  feed_onestop_id: String\n  route_id: String\n  route_type: Int\n  serviced: Boolean\n  bbox: BoundingBox\n  within: Polygon\n  near: PointRadius\n  search: String\n  operator_onestop_id: String\n  license: LicenseFilter\n  agency_ids: [Int!] # keep?\n}\n\ninput StopFilter {\n  onestop_id: String\n  onestop_ids: [String!]\n  allow_previous_onestop_ids: Boolean\n  feed_version_sha1: String\n  feed_onestop_id: String\n  stop_id: String\n  stop_code: String\n  location_type: Int\n  serviced: Boolean\n  bbox: BoundingBox\n  within: Polygon\n  near: PointRadius\n  search: String\n  license: LicenseFilter\n  served_by_onestop_ids: [String!]\n  served_by_route_type: Int\n  agency_ids: [Int!] # keep?\n}\n\ninput StopTimeFilter {\n  service_date: Date\n  use_service_window: Boolean\n  start_time: Int\n  end_time: Int\n  start: Seconds\n  end: Seconds\n  next: Int\n  route_onestop_ids: [String!] # keep?\n  allow_previous_route_onestop_ids: Boolean\n  exclude_first: Boolean\n  exclude_last: Boolean\n}\n\ninput TripStopTimeFilter {\n  start: Seconds\n  end: Seconds\n}\n\ninput StopObservationFilter {\n  source: String!\n  feed_version_id: Int!\n  trip_start_date: Date!\n}\n\ninput PathwayFilter {\n  pathway_mode: Int\n}\n\ninput TripFilter {\n  service_date: Date\n  trip_id: String\n  stop_pattern_id: Int\n  license: LicenseFilter\n  route_ids: [Int!] # keep?\n  route_onestop_ids: [String!] # keep?\n  feed_version_sha1: String\n  feed_onestop_id: String\n}\n\n\ninput LicenseFilter {\n  share_alike_optional: LicenseValue\n  create_derived_product: \n  commercial_use_allowed: LicenseValue\n  use_without_attribution: LicenseValue\n  redistribution_allowed: LicenseValue\n}\n\ninput FeedVersionServiceLevelFilter {\n  start_date: Date\n  end_date: Date\n}\n\ninput ServiceCoversFilter {\n  start_date: Date\n  end_date: Date\n  fetched_after: Time\n  fetched_before: Time\n}\n\ninput AgencyPlaceFilter {\n  min_rank: Float\n}\n\ninput PlaceFilter {\n  min_rank: Float\n  adm0_name: String\n  adm1_name: String\n  city_name: String\n}\n\ninput CalendarDateFilter {\n  date: Date\n  exception_type: Int\n}\n\ninput PointRadius {\n  lat: Float!\n  lon: Float!\n  radius: Float!\n}\n\ninput BoundingBox {\n  min_lon: Float!\n  min_lat: Float!\n  max_lon: Float!\n  max_lat: Float!\n}",
    "expected": "LicenseValue",
    "offset": 4227
}